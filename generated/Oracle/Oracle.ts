// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuthorizedSendersAdded extends ethereum.Event {
  get params(): AuthorizedSendersAdded__Params {
    return new AuthorizedSendersAdded__Params(this);
  }
}

export class AuthorizedSendersAdded__Params {
  _event: AuthorizedSendersAdded;

  constructor(event: AuthorizedSendersAdded) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get addedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AuthorizedSendersRemoved extends ethereum.Event {
  get params(): AuthorizedSendersRemoved__Params {
    return new AuthorizedSendersRemoved__Params(this);
  }
}

export class AuthorizedSendersRemoved__Params {
  _event: AuthorizedSendersRemoved;

  constructor(event: AuthorizedSendersRemoved) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get removedBy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CancelOracleRequest extends ethereum.Event {
  get params(): CancelOracleRequest__Params {
    return new CancelOracleRequest__Params(this);
  }
}

export class CancelOracleRequest__Params {
  _event: CancelOracleRequest;

  constructor(event: CancelOracleRequest) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ConfirmationCommitted extends ethereum.Event {
  get params(): ConfirmationCommitted__Params {
    return new ConfirmationCommitted__Params(this);
  }
}

export class ConfirmationCommitted__Params {
  _event: ConfirmationCommitted;

  constructor(event: ConfirmationCommitted) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get node(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get scoreData(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OracleRequest extends ethereum.Event {
  get params(): OracleRequest__Params {
    return new OracleRequest__Params(this);
  }
}

export class OracleRequest__Params {
  _event: OracleRequest;

  constructor(event: OracleRequest) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get specId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get requestId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get payment(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get callbackFunctionId(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get cancelExpiration(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class OracleResponse extends ethereum.Event {
  get params(): OracleResponse__Params {
    return new OracleResponse__Params(this);
  }
}

export class OracleResponse__Params {
  _event: OracleResponse;

  constructor(event: OracleResponse) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestConfirmed extends ethereum.Event {
  get params(): RequestConfirmed__Params {
    return new RequestConfirmed__Params(this);
  }
}

export class RequestConfirmed__Params {
  _event: RequestConfirmed;

  constructor(event: RequestConfirmed) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get finalData(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Staked extends ethereum.Event {
  get params(): Staked__Params {
    return new Staked__Params(this);
  }
}

export class Staked__Params {
  _event: Staked;

  constructor(event: Staked) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get authSender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenAmt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Withdrawn extends ethereum.Event {
  get params(): Withdrawn__Params {
    return new Withdrawn__Params(this);
  }
}

export class Withdrawn__Params {
  _event: Withdrawn;

  constructor(event: Withdrawn) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAmt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Oracle__requestsResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class Oracle extends ethereum.SmartContract {
  static bind(address: Address): Oracle {
    return new Oracle("Oracle", address);
  }

  getAuthorizedSenders(): Array<Address> {
    let result = super.call(
      "getAuthorizedSenders",
      "getAuthorizedSenders():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAuthorizedSenders(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAuthorizedSenders",
      "getAuthorizedSenders():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getExpiryTime(): BigInt {
    let result = super.call("getExpiryTime", "getExpiryTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getExpiryTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExpiryTime",
      "getExpiryTime():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getToken(): Address {
    let result = super.call("getToken", "getToken():(address)", []);

    return result[0].toAddress();
  }

  try_getToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("getToken", "getToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isAuthorizedSender(sender: Address): boolean {
    let result = super.call(
      "isAuthorizedSender",
      "isAuthorizedSender(address):(bool)",
      [ethereum.Value.fromAddress(sender)]
    );

    return result[0].toBoolean();
  }

  try_isAuthorizedSender(sender: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAuthorizedSender",
      "isAuthorizedSender(address):(bool)",
      [ethereum.Value.fromAddress(sender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRequestConfirmed(requestId: Bytes): boolean {
    let result = super.call(
      "isRequestConfirmed",
      "isRequestConfirmed(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(requestId)]
    );

    return result[0].toBoolean();
  }

  try_isRequestConfirmed(requestId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRequestConfirmed",
      "isRequestConfirmed(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(requestId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  minConfirmations(): BigInt {
    let result = super.call(
      "minConfirmations",
      "minConfirmations():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minConfirmations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minConfirmations",
      "minConfirmations():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requests(param0: Bytes): Oracle__requestsResult {
    let result = super.call("requests", "requests(bytes32):(uint248,bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return new Oracle__requestsResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_requests(param0: Bytes): ethereum.CallResult<Oracle__requestsResult> {
    let result = super.tryCall("requests", "requests(bytes32):(uint248,bool)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Oracle__requestsResult(value[0].toBigInt(), value[1].toBoolean())
    );
  }

  rewards(param0: Address): BigInt {
    let result = super.call("rewards", "rewards(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_rewards(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("rewards", "rewards(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawable(node: Address): BigInt {
    let result = super.call("withdrawable", "withdrawable(address):(uint256)", [
      ethereum.Value.fromAddress(node)
    ]);

    return result[0].toBigInt();
  }

  try_withdrawable(node: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawable",
      "withdrawable(address):(uint256)",
      [ethereum.Value.fromAddress(node)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _minConfirmations(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelOracleRequestCall extends ethereum.Call {
  get inputs(): CancelOracleRequestCall__Inputs {
    return new CancelOracleRequestCall__Inputs(this);
  }

  get outputs(): CancelOracleRequestCall__Outputs {
    return new CancelOracleRequestCall__Outputs(this);
  }
}

export class CancelOracleRequestCall__Inputs {
  _call: CancelOracleRequestCall;

  constructor(call: CancelOracleRequestCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get payment(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelOracleRequestCall__Outputs {
  _call: CancelOracleRequestCall;

  constructor(call: CancelOracleRequestCall) {
    this._call = call;
  }
}

export class OnTokenTransferCall extends ethereum.Call {
  get inputs(): OnTokenTransferCall__Inputs {
    return new OnTokenTransferCall__Inputs(this);
  }

  get outputs(): OnTokenTransferCall__Outputs {
    return new OnTokenTransferCall__Outputs(this);
  }
}

export class OnTokenTransferCall__Inputs {
  _call: OnTokenTransferCall;

  constructor(call: OnTokenTransferCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class OnTokenTransferCall__Outputs {
  _call: OnTokenTransferCall;

  constructor(call: OnTokenTransferCall) {
    this._call = call;
  }
}

export class OracleRequestCall extends ethereum.Call {
  get inputs(): OracleRequestCall__Inputs {
    return new OracleRequestCall__Inputs(this);
  }

  get outputs(): OracleRequestCall__Outputs {
    return new OracleRequestCall__Outputs(this);
  }
}

export class OracleRequestCall__Inputs {
  _call: OracleRequestCall;

  constructor(call: OracleRequestCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get payment(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get specId(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get callbackFunctionId(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get nonce(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get account(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class OracleRequestCall__Outputs {
  _call: OracleRequestCall;

  constructor(call: OracleRequestCall) {
    this._call = call;
  }
}

export class RemoveAuthorizedSendersCall extends ethereum.Call {
  get inputs(): RemoveAuthorizedSendersCall__Inputs {
    return new RemoveAuthorizedSendersCall__Inputs(this);
  }

  get outputs(): RemoveAuthorizedSendersCall__Outputs {
    return new RemoveAuthorizedSendersCall__Outputs(this);
  }
}

export class RemoveAuthorizedSendersCall__Inputs {
  _call: RemoveAuthorizedSendersCall;

  constructor(call: RemoveAuthorizedSendersCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAuthorizedSendersCall__Outputs {
  _call: RemoveAuthorizedSendersCall;

  constructor(call: RemoveAuthorizedSendersCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAuthorizedSendersCall extends ethereum.Call {
  get inputs(): SetAuthorizedSendersCall__Inputs {
    return new SetAuthorizedSendersCall__Inputs(this);
  }

  get outputs(): SetAuthorizedSendersCall__Outputs {
    return new SetAuthorizedSendersCall__Outputs(this);
  }
}

export class SetAuthorizedSendersCall__Inputs {
  _call: SetAuthorizedSendersCall;

  constructor(call: SetAuthorizedSendersCall) {
    this._call = call;
  }

  get senders(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorizedSendersCall__Outputs {
  _call: SetAuthorizedSendersCall;

  constructor(call: SetAuthorizedSendersCall) {
    this._call = call;
  }
}

export class SetScoreTokenCall extends ethereum.Call {
  get inputs(): SetScoreTokenCall__Inputs {
    return new SetScoreTokenCall__Inputs(this);
  }

  get outputs(): SetScoreTokenCall__Outputs {
    return new SetScoreTokenCall__Outputs(this);
  }
}

export class SetScoreTokenCall__Inputs {
  _call: SetScoreTokenCall;

  constructor(call: SetScoreTokenCall) {
    this._call = call;
  }

  get _scoreTknAdd(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetScoreTokenCall__Outputs {
  _call: SetScoreTokenCall;

  constructor(call: SetScoreTokenCall) {
    this._call = call;
  }
}

export class StakeCall extends ethereum.Call {
  get inputs(): StakeCall__Inputs {
    return new StakeCall__Inputs(this);
  }

  get outputs(): StakeCall__Outputs {
    return new StakeCall__Outputs(this);
  }
}

export class StakeCall__Inputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get authSender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class StakeCall__Outputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }
}

export class SubmitConfirmationCall extends ethereum.Call {
  get inputs(): SubmitConfirmationCall__Inputs {
    return new SubmitConfirmationCall__Inputs(this);
  }

  get outputs(): SubmitConfirmationCall__Outputs {
    return new SubmitConfirmationCall__Outputs(this);
  }
}

export class SubmitConfirmationCall__Inputs {
  _call: SubmitConfirmationCall;

  constructor(call: SubmitConfirmationCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get payment(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get callbackAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get callbackFunctionId(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get data(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class SubmitConfirmationCall__Outputs {
  _call: SubmitConfirmationCall;

  constructor(call: SubmitConfirmationCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnstakeCall extends ethereum.Call {
  get inputs(): UnstakeCall__Inputs {
    return new UnstakeCall__Inputs(this);
  }

  get outputs(): UnstakeCall__Outputs {
    return new UnstakeCall__Outputs(this);
  }
}

export class UnstakeCall__Inputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnstakeCall__Outputs {
  _call: UnstakeCall;

  constructor(call: UnstakeCall) {
    this._call = call;
  }
}

export class UpdateMinConfirmationsCall extends ethereum.Call {
  get inputs(): UpdateMinConfirmationsCall__Inputs {
    return new UpdateMinConfirmationsCall__Inputs(this);
  }

  get outputs(): UpdateMinConfirmationsCall__Outputs {
    return new UpdateMinConfirmationsCall__Outputs(this);
  }
}

export class UpdateMinConfirmationsCall__Inputs {
  _call: UpdateMinConfirmationsCall;

  constructor(call: UpdateMinConfirmationsCall) {
    this._call = call;
  }

  get newConfirmations(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateMinConfirmationsCall__Outputs {
  _call: UpdateMinConfirmationsCall;

  constructor(call: UpdateMinConfirmationsCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

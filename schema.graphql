type ChainScore @entity {
  "1"
  id: Bytes!
  address: Bytes!
  owner: Bytes!
  totalValidatorCount: BigInt!
  totalUserCount: BigInt!
  totalRequestCount: BigInt!
  minConfirmations: Int!
  gasPrice: BigInt!
}

type ChainScoreDayData @entity {
  "Day ID"
  id: Bytes!
  day: Int!
  validatorCount: BigInt!
  userCount: BigInt!
  requestCount: BigInt!
}

type Request @entity {
  "{Request ID}"
  id: Bytes!
  "Spec ID"
  spec: Spec!
  "Address that called"
  sender: User!
  "Fees"
  payment: BigInt!
  "FUnction to call"
  callbackFunctionId: Bytes!
  "Address to analyser"
  address: Bytes!
  expiration: BigInt!
  confirmations: [ConfirmationCommittment!] ! @derivedFrom(field: "request")
  confirmed: Boolean!
  finalData: BigInt
  "creation tx"
  createdAt: Transaction!
  "created at timestamp"
  timestamp: BigInt!
}

type Transaction @entity {
  "{Tx ID} + {logIndex}"
  id: Bytes!
  hash: Bytes!
  
  txFee: BigInt
  gasPrice: BigInt
  
  timestamp: Int!
}

type User @entity {
  "{User address}"
  id: Bytes!
  requests: [Request!]! @derivedFrom(field: "sender")
  activeSince: Transaction!
}

type Spec @entity {
  "{Spec ID}"
  id: Bytes!
  requests: [Request!]! @derivedFrom(field: "spec")
  createdAt: Transaction!
}

type Validator @entity {
  id: Bytes!
  commitments: [ConfirmationCommittment!]! @derivedFrom(field: "sender")

  isAuthorized: Boolean!
  stake: BigInt!
  addedBy: Bytes!
  
  activeSince: Transaction!
  activeSinceTimestamp: Int!
  lastActive: Int!
}

type ConfirmationCommittment @entity {
  "{Tx ID} + {logIndex} + {Request ID}"
  id: Bytes!
  "Validator address"
  sender: Validator!
  "Score data"
  data: BigInt!
  "Request"
  request: Request!
  "transaction"
  createdAt: Transaction!
  "timestamp"
  timestamp: Int!
}